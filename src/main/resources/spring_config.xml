<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--第一步 扫描service dao后面单独设置-->
    <context:component-scan base-package="com.banyuan.service.**">

    </context:component-scan>

    <!-- 第二步 使用标签去加载propertis配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 第三步 配置德鲁伊的数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

    </bean>

    <!-- 第四步 Spring 整合MyBatis -->
    <!-- 配置SqlSession工厂类 -->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 加载相应的mybatis配置文件
        <property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
         -->
        <!-- 指定包的路径，在该内下的所有JAVA类，都会为其定义别名 别名：类名 -->
        <property name="typeAliasesPackage" value="com.banyuan.study.bean"></property>
        <!-- -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>

        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="logImpl" value="org.apache.ibatis.logging.log4j.Log4jImpl"/>
            </bean>
        </property>
    </bean>

    <!-- 自动扫描，将Mapper代理对象自动注入到Spring dao中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.banyuan.mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>


    <!-- 五、配置事 务管理 -->
    <!-- 对数据源 DataSource 事务管理器配置 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--开启声明式注解事务 驱动 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 第六步 开启注解式 AOP配置    -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>